// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  idDB                   Int       @id @default(autoincrement())
  idAuth0                String    @unique
  email                  String    @unique
  picture                String
  name                   String
  familyName             String
  age                    DateTime
  phone                  String
  location               String
  inProgressApplications String[]
  coordinateX            String // google maps?
  coordinateY            String // google maps?
  readyMove              Boolean
  workingHours           String
  workingModal           String
  socialMedia            String[]
  skillsProf             String[]
  stack                  String[]
  compLanguages          String[]
  messages               Message[]
}

model Company {
  id            Int       @id @default(autoincrement())
  name          String
  vacancies     Vacancy[]
  logo          String
  founded       String
  about         String
  externalLinks String[]
  headOffice    String
}

model Vacancy {
  id                Int      @id @default(autoincrement())
  company           Company  @relation(fields: [companyId], references: [id])
  companyId         Int
  about             String
  title             String
  recruitantID      String
  jobTrack          Track[]
  workingHours      String
  workingModal      String
  skills            String[]
  stack             String[]
  requiredLanguages String[]
  experience        Int
  location          String
  salaryRange       Int
}

model Track {
  id           Int       @id @default(autoincrement())
  steps        Step[]
  recruitantID String
  applicantID  String
  reject       Boolean   @default(false)
  notes        String?
  Vacancy      Vacancy?  @relation(fields: [vacancyId], references: [id])
  vacancyId    Int
  Message      Message[]
}

model Step {
  id            Int           @id @default(autoincrement())
  title         String
  actions       Action[]
  durationInMs  Int
  hidden        Boolean
  statusStep    Boolean
  messages      Message[]
  questionaries Questionary[]
  Track         Track?        @relation(fields: [trackId], references: [id])
  trackId       Int
}

model Message {
  id      Int      @id @default(autoincrement())
  trackId Int
  track   Track    @relation(fields: [trackId], references: [id])
  user    User     @relation(fields: [userId], references: [idDB])
  userId  Int
  text    String
  date    DateTime
  files   String[]
  Step    Step?    @relation(fields: [stepId], references: [id])
  stepId  Int
}

model Action {
  id           Int    @id @default(autoincrement())
  action       Step   @relation(fields: [stepId], references: [id])
  stepId       Int
  name         String
  scheduleDate String
}

model Questionary {
  id        Int      @id @default(autoincrement())
  questions String[]
  answer    String[]
  date      DateTime
  Step      Step?    @relation(fields: [stepId], references: [id])
  stepId    Int?
}
